name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - "**/*.go"
#      - "go.mod"
#      - "go.sum"
#      - ".github/workflows/build.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/build.yml"
jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, linux, darwin]
        goarch: [amd64, 386]
        exclude:
          # Exclude i386 on darwin
          - goarch: 386
            goos: darwin
        include:
          # BEIGIN MacOS ARM64
          - goos: darwin
            goarch: arm64
          # END MacOS ARM64
          # BEGIN Linux ARM 7 8
          - goos: linux
            goarch: arm
            goarm: 7          
          - goos: linux
            goarch: arm64
          # END Linux ARM 7 8
          # BEGIN Android ARM 8
          - goos: android
            goarch: arm64
          # END Android ARM 8
          # Windows ARM
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: arm
            goarm: 7
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        
      - name: Set REVISION
        run: |
          sed -i "s/__REVISION__/$(git rev-parse HEAD)/g" src/command.go

      - name: Show workflow information 
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true

      - name: Get project dependencies
        run: go mod download
 
      - name: Build
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/wgcf-cli -trimpath -ldflags "-s -w -buildid=" ./src
 
      - name: Build Mips softfloat
        if: matrix.goarch == 'mips' || matrix.goarch == 'mipsle'
        run: |
          GOMIPS=softfloat go build -v -o build_assets/wgcf-cli -trimpath -ldflags "-s -w -buildid=" ./src

      - name: Rename Windows
        if: matrix.goos == 'windows'
        run: |
          cd ./build_assets || exit 1
          mv wgcf-cli wgcf-cli.exe

      - name: Copy README.md & LICENSE
        run: |
          cp ${GITHUB_WORKSPACE}/README.md ./build_assets/README.md
          cp ${GITHUB_WORKSPACE}/LICENSE ./build_assets/LICENSE

      - name: Create ZIP archive
        shell: bash
        if: github.event_name == 'release'
        run: |
          pushd build_assets || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../wgcf-cli-${{ env.ASSET_NAME }}.zip .
          popd || exit 1
          FILE=./wgcf-cli-${{ env.ASSET_NAME }}.zip
          DGST=$FILE.dgst
          for METHOD in {"md5","sha1","sha256","sha512"}
          do
            openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
          done

      - name: Change the name
        run: |
          mv build_assets wgcf-cli-${{ env.ASSET_NAME }}

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4
        with:
          name: wgcf-cli-${{ env.ASSET_NAME }}
          path: |
            ./wgcf-cli-${{ env.ASSET_NAME }}/*

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./wgcf-cli-${{ env.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
          file_glob: true
